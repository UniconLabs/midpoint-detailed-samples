\connect intermediate postgres

CREATE TABLE MP_GR_GROUP_REQUESTS (
      ID SERIAL NOT NULL PRIMARY KEY,
      SUBJECT_ID VARCHAR(255) NOT NULL,
      GROUP_NAME VARCHAR(255) NOT NULL,
      APPROVER VARCHAR(255) NULL,
      APPROVAL_TIME VARCHAR(255) NULL,
      COMMENT VARCHAR(255) NULL,
      CREATED TIMESTAMP NOT NULL DEFAULT NOW(),
      UPDATED TIMESTAMP NOT NULL DEFAULT NOW(),
      CONSTRAINT mp_gr_group_requests_unique UNIQUE (SUBJECT_ID,GROUP_NAME)
);

CREATE OR REPLACE FUNCTION trigger_set_timestamp() RETURNS TRIGGER AS $$
BEGIN
    NEW.UPDATED = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER set_timestamp_grouper_requests
    BEFORE UPDATE ON MP_GR_GROUP_REQUESTS
    FOR EACH ROW EXECUTE PROCEDURE trigger_set_timestamp();

GRANT ALL PRIVILEGES ON TABLE MP_GR_GROUP_REQUESTS TO midpoint;
GRANT ALL PRIVILEGES ON TABLE MP_GR_GROUP_REQUESTS TO grouper;
GRANT ALL PRIVILEGES ON TABLE MP_GR_GROUP_REQUESTS TO externaldata;
GRANT ALL PRIVILEGES ON TABLE MP_GR_GROUP_REQUESTS TO intermediate;

GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO midpoint;
ALTER DEFAULT PRIVILEGES IN SCHEMA public
    GRANT USAGE, SELECT ON SEQUENCES TO midpoint;

GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO intermediate;
ALTER DEFAULT PRIVILEGES IN SCHEMA public
    GRANT USAGE, SELECT ON SEQUENCES TO intermediate;
