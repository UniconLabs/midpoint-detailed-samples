<?xml version="1.0" encoding="UTF-8"?>
<objects xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
         xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
         xmlns:org="http://midpoint.evolveum.com/xml/ns/public/common/org-3">
    <resource xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
              xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
              xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3"
              xmlns:org="http://midpoint.evolveum.com/xml/ns/public/common/org-3"
              xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
              xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
              xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              oid="386bf56f-87a2-4496-9cdb-db18729da89a"
              version="1">
        <name>Inbound Grouper Groups</name>
        <description>Pulls Grouper Group Memberships from an intermediate database table that's populated with group memberships from a Grouper SQL Provisioner.</description>
        <connectorRef relation="org:default" type="c:ConnectorType">
            <description>
                ConnId org.identityconnectors.databasetable.DatabaseTableConnector
            </description>
            <filter>
                <q:equal>
                    <q:path>connectorType</q:path>
                    <q:value>org.identityconnectors.databasetable.DatabaseTableConnector</q:value>
                </q:equal>
            </filter>
        </connectorRef>
        <connectorConfiguration xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3">
            <icfc:configurationProperties xmlns:gen120="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.polygon.connector-databasetable/org.identityconnectors.databasetable.DatabaseTableConnector">
                <gen120:user>${GPR_SUBJ_SRC_DB_USER}</gen120:user>
                <gen120:password>${GPR_SUBJ_SRC_DB_PASSWORD}</gen120:password>
                <gen120:table>midpoint_groups_v</gen120:table>
                <gen120:keyColumn>subject_id</gen120:keyColumn>
                <gen120:changeLogColumn>LAST_UPDATED</gen120:changeLogColumn>
                <gen120:jdbcDriver>org.postgresql.Driver</gen120:jdbcDriver>
                <gen120:jdbcUrlTemplate xmlns="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.polygon.connector-databasetable/org.identityconnectors.databasetable.DatabaseTableConnector" xmlns:a="http://prism.evolveum.com/xml/ns/public/annotation-3">jdbc:postgresql://${GPR_SUBJ_SRC_DB_SERVER}:${GPR_SUBJ_SRC_DB_PORT}/${GPR_SUBJ_SRC_DB_NAME}</gen120:jdbcUrlTemplate>
                <gen120:validConnectionQuery>select 1 from midpoint_groups_v limit 1</gen120:validConnectionQuery>
                <gen120:allNative>true</gen120:allNative>
            </icfc:configurationProperties>
            <icfc:resultsHandlerConfiguration>
                <icfc:enableNormalizingResultsHandler>false</icfc:enableNormalizingResultsHandler>
                <icfc:enableFilteredResultsHandler>false</icfc:enableFilteredResultsHandler>
                <icfc:enableAttributesToGetSearchResultsHandler>false</icfc:enableAttributesToGetSearchResultsHandler>
            </icfc:resultsHandlerConfiguration>
            <icfc:timeouts>
                <icfc:create>180000</icfc:create>
                <icfc:get>180000</icfc:get>
                <icfc:update>180000</icfc:update>
                <icfc:delete>180000</icfc:delete>
                <icfc:test>60000</icfc:test>
                <icfc:scriptOnConnector>180000</icfc:scriptOnConnector>
                <icfc:scriptOnResource>180000</icfc:scriptOnResource>
                <icfc:authentication>60000</icfc:authentication>
                <icfc:search>180000</icfc:search>
                <icfc:validate>180000</icfc:validate>
                <icfc:sync>180000</icfc:sync>
                <icfc:schema>60000</icfc:schema>
            </icfc:timeouts>
        </connectorConfiguration>
        <schema></schema>
        <schemaHandling>
            <objectType>
                <kind>account</kind>
                <default>true</default>
                <objectClass>ri:AccountObjectClass</objectClass>
                <attribute>
                    <c:ref>icfs:name</c:ref>
                    <displayName>subjectId</displayName>
                    <tolerant>true</tolerant>
                    <exclusiveStrong>false</exclusiveStrong>
                    <inbound>
                        <authoritative>true</authoritative>
                        <exclusive>false</exclusive>
                        <strength>weak</strength>
                        <target>
                            <path>name</path>
                        </target>
                    </inbound>
                    <outbound>
                        <authoritative>true</authoritative>
                        <exclusive>false</exclusive>
                        <strength>weak</strength>
                        <source>
                            <path>name</path>
                        </source>
                    </outbound>
                </attribute>
                <attribute>
                    <ref>ri:group_membership_list</ref>
                    <inbound>
                        <authoritative>true</authoritative>
                        <exclusive>false</exclusive>
                        <strength>strong</strength>
                        <expression>
                            <script>
                                <relativityMode>absolute</relativityMode>
                                <code>
                                    import com.evolveum.midpoint.xml.ns._public.common.common_3.*
                                    import com.evolveum.prism.xml.ns._public.types_3.PolyStringType

                                    if (input?.trim()) {
                                        log.debug("GroupNameMap: Processing organization for group id [" + input + "]...")
                                        def groupMembershipList = input?.trim()?.tokenize(",")
                                        def resultAssignments = []

                                        for (group in groupMembershipList) {
                                            if (group?.trim()) {
                                                def orgId = group?.trim()
                                                def org = midpoint.getOrgByName(orgId)

                                                if (org == null) {
                                                    log.debug("GroupNameMap: Org not found, creating group/org with id [" + orgId + "]!")
                                                    org = midpoint.createEmptyObjectWithName(OrgType.class, orgId)

                                                    def orgName = orgId.substring(orgId.lastIndexOf(":")+1, orgId.length())
                                                    log.debug("GroupNameMap: Created displayName of [" + orgName + "] for org [" + orgId + "].")
                                                    org.setDisplayName(new PolyStringType(orgName))

                                                    org.setDescription(orgId)
                                                    def archAssign = new AssignmentType()
                                                    def archTarget = new ObjectReferenceType()
                                                    archTarget.setOid("81f30e37-f7d5-4153-9c96-f049dd144e19")
                                                    archTarget.setType(ArchetypeType.COMPLEX_TYPE)
                                                    archAssign.setTargetRef(archTarget)
                                                    org.getAssignment().add(archAssign)
                                                    midpoint.addObject(org)
                                                }

                                                def groupAssign = new AssignmentType()
                                                def orgTarget = new ObjectReferenceType()
                                                orgTarget.setOid(org.getOid())
                                                orgTarget.setType(OrgType.COMPLEX_TYPE)
                                                groupAssign.setTargetRef(orgTarget)

                                                resultAssignments.add(groupAssign)
                                            }
                                        }

                                        return resultAssignments
                                    }
                                </code>
                            </script>
                        </expression>
                        <target>
                            <path>assignment</path>
                        </target>
                    </inbound>
                </attribute>
            </objectType>
        </schemaHandling>
        <capabilities>
            <native xmlns:cap="http://midpoint.evolveum.com/xml/ns/public/resource/capabilities-3" xsi:type="c:CapabilityCollectionType">
                <cap:schema/>
                <cap:liveSync/>
                <cap:testConnection/>
                <cap:create/>
                <cap:update>
                    <cap:addRemoveAttributeValues>true</cap:addRemoveAttributeValues>
                </cap:update>
                <cap:delete/>
                <cap:script>
                    <cap:host>
                        <cap:type>connector</cap:type>
                    </cap:host>
                </cap:script>
                <cap:read>
                    <cap:returnDefaultAttributesOption>false</cap:returnDefaultAttributesOption>
                </cap:read>
            </native>
            <configured xmlns:cap="http://midpoint.evolveum.com/xml/ns/public/resource/capabilities-3" xsi:type="c:CapabilityCollectionType">
                <cap:liveSync>
                    <cap:enabled>true</cap:enabled>
                </cap:liveSync>
                <cap:testConnection>
                    <cap:enabled>true</cap:enabled>
                </cap:testConnection>
                <cap:create>
                    <cap:enabled>false</cap:enabled>
                </cap:create>
                <cap:update>
                    <cap:enabled>false</cap:enabled>
                    <cap:addRemoveAttributeValues>true</cap:addRemoveAttributeValues>
                </cap:update>
                <cap:delete>
                    <cap:enabled>false</cap:enabled>
                </cap:delete>
                <cap:script>
                    <cap:enabled>true</cap:enabled>
                    <cap:host>
                        <cap:type>connector</cap:type>
                    </cap:host>
                </cap:script>
                <cap:read>
                    <cap:enabled>true</cap:enabled>
                    <cap:returnDefaultAttributesOption>false</cap:returnDefaultAttributesOption>
                </cap:read>
            </configured>
        </capabilities>
        <synchronization>
            <objectSynchronization>
                <objectClass>AccountObjectClass</objectClass>
                <kind>account</kind>
                <focusType>c:UserType</focusType>
                <enabled>true</enabled>
                <correlation>
                    <q:equal xmlns="">
                        <q:path>name</q:path>
                        <expression xmlns="">
                            <path>
                                $projection/attributes/name
                            </path>
                        </expression>
                    </q:equal>
                </correlation>
                <reconcile>false</reconcile>
                <reaction>
                    <situation>linked</situation>
                    <synchronize>true</synchronize>
                </reaction>
                <reaction>
                    <situation>deleted</situation>
                    <synchronize>true</synchronize>
                    <action>
                        <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#unlink</handlerUri>
                    </action>
                </reaction>
                <reaction>
                    <situation>unlinked</situation>
                    <synchronize>true</synchronize>
                    <action>
                        <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
                    </action>
                </reaction>
                <reaction>
                    <situation>unmatched</situation>
                    <synchronize>true</synchronize>
                </reaction>
            </objectSynchronization>
        </synchronization>
    </resource>
</objects>